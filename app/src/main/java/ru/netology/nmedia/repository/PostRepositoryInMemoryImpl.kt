package ru.netology.nmedia.repository

import androidx.lifecycle.LiveData
import androidx.lifecycle.MutableLiveData
import ru.netology.nmedia.dto.Post
import java.security.KeyStore

class PostRepositoryInMemoryImpl: PostRepository {

    private var posts = listOf(
        Post(
        id = 1,
        author = "Нетология. Университет интернет-профессий будущего",
        published = "21 мая в 18:36",
        content = "Привет, это новая Нетология! Когда-то Нетология начиналась с " +
                "интенсивов по онлайн-маркетингу. Затем появились курсы по дизайну, разработке," +
                " аналитике и управлению. Мы растём сами и помогаем расти студентам: от новичков" +
                " до уверенных профессионалов. Но самое важное остаётся с нами: мы верим, что" +
                " в каждом уже есть сила, которая заставляет хотеть больше, целиться выше, бежать" +
                " быстрее. Наша миссия — помочь встать на путь роста и начать цепочку перемен" +
                " → http://netolo.gy/fyb",
        likes = 999,
        shares = 10,
        views = 1_200_000
        ),
        Post(
            id = 2,
            author = "Нетология. Университет интернет-профессий будущего",
            published = "21 мая в 19:36",
            content = "Привет, это новая Нетология! Когда-то Нетология начиналась с " +
                    "интенсивов по онлайн-маркетингу. Затем появились курсы по дизайну, разработке," +
                    " аналитике и управлению. Мы растём сами и помогаем расти студентам: от новичков" +
                    " до уверенных профессионалов. Но самое важное остаётся с нами: мы верим, что" +
                    " в каждом уже есть сила, которая заставляет хотеть больше, целиться выше, бежать" +
                    " быстрее. Наша миссия — помочь встать на путь роста и начать цепочку перемен" +
                    " → http://netolo.gy/fyb",
            likes = 10,
            shares = 999,
            views = 10_200_000,
            likeByMe = true
        ),Post(
            id = 3,
            author = "Нетология. Университет интернет-профессий будущего",
            published = "21 мая в 20:36",
            content = "Привет, это новая Нетология! Когда-то Нетология начиналась с " +
                    "интенсивов по онлайн-маркетингу. Затем появились курсы по дизайну, разработке," +
                    " аналитике и управлению. Мы растём сами и помогаем расти студентам: от новичков" +
                    " до уверенных профессионалов. Но самое важное остаётся с нами: мы верим, что" +
                    " в каждом уже есть сила, которая заставляет хотеть больше, целиться выше, бежать" +
                    " быстрее. Наша миссия — помочь встать на путь роста и начать цепочку перемен" +
                    " → http://netolo.gy/fyb",
            likes = 9999,
            shares = 120,
            views = 100_200_000
        ),
        Post(
            id = 4,
            author = "Нетология. Университет интернет-профессий будущего",
            published = "21 мая в 21:36",
            content = "Привет, это новая Нетология! Когда-то Нетология начиналась с " +
                    "интенсивов по онлайн-маркетингу. Затем появились курсы по дизайну, разработке," +
                    " аналитике и управлению. Мы растём сами и помогаем расти студентам: от новичков" +
                    " до уверенных профессионалов. Но самое важное остаётся с нами: мы верим, что" +
                    " в каждом уже есть сила, которая заставляет хотеть больше, целиться выше, бежать" +
                    " быстрее. Наша миссия — помочь встать на путь роста и начать цепочку перемен" +
                    " → http://netolo.gy/fyb",
            likes = 999,
            shares = 10,
            views = 1_200_000
        )
    )
    private val data = MutableLiveData(posts)

//    override fun get(): LiveData<Post> = data

//    override fun like() {
//        post = post.copy(
//            likeByMe = !post.likeByMe,
//            likes = if (post.likeByMe){
//                post.likes - 1
//            } else {
//                post.likes + 1
//            }
//        )
//
//        data.value = post
//    }

//    override fun share() {
//        post = post.copy(
//            shares = post.shares + 1
//        )
//
//        data.value = post
//    }

    override fun getAll(): LiveData<List<Post>> = data

    override fun likeById(id: Long) {
        posts = posts.map{
            if (it.id != id) it else it.copy(
                likeByMe = !it.likeByMe, likes = if (it.likeByMe) it.likes - 1 else it.likes + 1)
        }
        data.value = posts
    }

}